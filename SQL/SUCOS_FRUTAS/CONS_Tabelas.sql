SELECT COUNT(*) [Quantidade de Clientes] FROM tabela_de_clientes
SELECT COUNT(*) [Quantidade de Produtos] FROM tabela_de_produtos
SELECT COUNT(*) [Quantidade de Vendedores] FROM tabela_de_vendedores
SELECT COUNT(*) [Quantidade de NFs] FROM notas_fiscais
SELECT COUNT(*) [Quantidade de Itens de NFs] FROM itens_notas_fiscais

--------------------------------------------------------------------------------------

SELECT	TDC.CPF		AS IDENTIFICADOR, 
		TDC.NOME	AS [NOME DO CLIENTE],
		TDC.CIDADE,
		TDC.IDADE
FROM	TABELA_DE_CLIENTES TDC
WHERE	TDC.CIDADE = 'Sao Paulo' AND YEAR(TDC.DATA_DE_NASCIMENTO) > '1990'


SELECT * FROM TABELA_DE_PRODUTOS WHERE 1=1 /* 1=0 */

--------------------------------------------------------------------------------------

SELECT * FROM TABELA_DE_CLIENTES
WHERE NOT (IDADE = 25 OR ESTADO = 'RJ') /* >  <  >=  <=  <> */

--------------------------------------------------------------------------------------

SELECT * FROM TABELA_DE_PRODUTOS WHERE SABOR = 'Manga' AND TAMANHO = '470 ml'
SELECT * FROM TABELA_DE_PRODUTOS WHERE SABOR = 'Manga' OR TAMANHO = '470 ml'


SELECT * FROM TABELA_DE_PRODUTOS WHERE NOT (SABOR = 'Manga' AND TAMANHO = '470 ml')
SELECT * FROM TABELA_DE_PRODUTOS WHERE NOT (SABOR = 'Manga' OR TAMANHO = '470 ml')
SELECT * FROM TABELA_DE_PRODUTOS WHERE NOT SABOR = 'Manga' AND TAMANHO = '470 ml'


SELECT * FROM TABELA_DE_PRODUTOS WHERE (SABOR IN ('Manga', 'Laranja', 'Melancia')) AND TAMANHO IN ('1 litro', '2 litros')


SELECT * FROM TABELA_DE_CLIENTES WHERE ESTADO IN ('RJ', 'SP') AND (IDADE >= 20 AND IDADE <= 25)
SELECT * FROM TABELA_DE_CLIENTES WHERE ESTADO IN ('RJ', 'SP') AND (IDADE BETWEEN 20 AND 25)
 
--------------------------------------------------------------------------------------

SELECT * FROM tabela_de_produtos WHERE (SABOR LIKE '%Limao%') AND (EMBALAGEM = 'PET') 
SELECT * FROM tabela_de_clientes WHERE NOME LIKE '%silva%'

--------------------------------------------------------------------------------------

SELECT DISTINCT EMBALAGEM FROM TABELA_DE_PRODUTOS
SELECT DISTINCT TOP 5 SABOR FROM TABELA_DE_PRODUTOS
SELECT TOP 10 * FROM dbo.NOTAS_FISCAIS WHERE DATA_VENDA >= '2017/10/01'

--------------------------------------------------------------------------------------

SELECT * FROM TABELA_DE_PRODUTOS ORDER BY PRECO_DE_LISTA
SELECT * FROM TABELA_DE_PRODUTOS ORDER BY PRECO_DE_LISTA DESC 
SELECT * FROM TABELA_DE_PRODUTOS ORDER BY NOME_DO_PRODUTO ASC 
SELECT * FROM TABELA_DE_PRODUTOS ORDER BY EMBALAGEM, NOME_DO_PRODUTO

--------------------------------------------------------------------------------------

/* SUM - AVG - MAX - MIN */
SELECT	 CIDADE, 
		 SUM(IDADE) AS [SOMA DAS IDADES],
		 SUM(LIMITE_DE_CREDITO) AS [SOMA DOS CREDITOS]
FROM	 TABELA_DE_CLIENTES 
GROUP BY CIDADE 


SELECT	 CIDADE, 
		 AVG(IDADE) AS [MÉDIA DAS IDADES],
		 SUM(LIMITE_DE_CREDITO) AS [SOMA DOS CREDITOS]
FROM	 TABELA_DE_CLIENTES 
GROUP BY CIDADE


SELECT   CIDADE, 
		 COUNT(*) AS [NUMERO DE CLIENTES] 
FROM	 TABELA_DE_CLIENTES 
GROUP BY CIDADE


SELECT	 EMBALAGEM,
		 SABOR, 
		 COUNT(*) AS [NUMERO DE CLIENTES] 
FROM	 TABELA_DE_PRODUTOS 
WHERE	 SABOR = 'Laranja' 
GROUP BY EMBALAGEM, SABOR

--------------------------------------------------------------------------------------

SELECT ESTADO, SUM(LIMITE_DE_CREDITO) AS CREDITO
FROM TABELA_DE_CLIENTES GROUP BY ESTADO


SELECT ESTADO, SUM(LIMITE_DE_CREDITO) AS CREDITO
FROM TABELA_DE_CLIENTES 
GROUP BY ESTADO
HAVING SUM(LIMITE_DE_CREDITO) >= 900000


SELECT EMBALAGEM, MAX(PRECO_DE_LISTA) AS [PRECO MAX], MIN(PRECO_DE_LISTA) AS [PRECO MIN]
FROM TABELA_DE_PRODUTOS GROUP BY EMBALAGEM


SELECT EMBALAGEM, MAX(PRECO_DE_LISTA) AS [PRECO MAX], MIN(PRECO_DE_LISTA) AS [PRECO MIN]
FROM TABELA_DE_PRODUTOS 
GROUP BY EMBALAGEM
HAVING MAX(PRECO_DE_LISTA) >= 20

--------------------------------------------------------------------------------------

SELECT	NOME_DO_PRODUTO, SABOR, PRECO_DE_LISTA,
		(CASE 
			WHEN PRECO_DE_LISTA >= 12 THEN 'PRODUTO CARO' 
			WHEN PRECO_DE_LISTA BETWEEN 7 AND 12 THEN 'PRODUTO EM CONTA'
			ELSE 'PRODUTO BARATO'
		END) [CLASSIFICACAO]
FROM TABELA_DE_PRODUTOS
--WHERE SABOR = 'Manga'
ORDER BY PRECO_DE_LISTA


SELECT	COUNT(*) AS [NUMERO DE CLIENTES],
		(CASE 
			WHEN YEAR(DATA_DE_NASCIMENTO) > '1991' THEN 'adequado'
			WHEN YEAR(DATA_DE_NASCIMENTO) <= '1991' THEN 'inadequado'
		END) AS [REALIZAR PEDIDO]
FROM TABELA_DE_CLIENTES
GROUP BY (CASE WHEN YEAR(DATA_DE_NASCIMENTO) > '1991' THEN 'adequado' 
		 WHEN YEAR(DATA_DE_NASCIMENTO) <= '1991' THEN 'inadequado' END)

--------------------------------------------------------------------------------------

SELECT * FROM TABELA_DE_VENDEDORES
SELECT * FROM NOTAS_FISCAIS

SELECT	NF.MATRICULA, 
		VEND.NOME,
		COUNT(*) AS [QUANTIDADE DE VENDAS]
FROM NOTAS_FISCAIS AS NF
		INNER JOIN TABELA_DE_VENDEDORES AS VEND 
		ON NF.MATRICULA = VEND.MATRICULA
GROUP BY NF.MATRICULA, VEND.NOME

--------------------------------------------------------------------------------------

INSERT INTO TABELA_DE_CLIENTES
( CPF, NOME, ENDERECO_1, ENDERECO_2, BAIRRO, CIDADE, ESTADO, CEP, DATA_DE_NASCIMENTO, 
  IDADE, GENERO, LIMITE_DE_CREDITO, VOLUME_DE_COMPRA, PRIMEIRA_COMPRA )
VALUES
( '23412632331', 'Juliana Silva', 'R. Tramandai', '', 'Bangu', 'Rio de Janeiro', 'RJ', '234000', 
  '1989-02-04', 33, 'F', 180000, 24500, 0 )

SELECT COUNT(*) FROM TABELA_DE_CLIENTES
SELECT DISTINCT
		CLI.CPF [CPF DO CADASTRO] , 
		CLI.NOME,
		NF.CPF [CPF DA NOTA]
FROM TABELA_DE_CLIENTES [CLI] LEFT JOIN NOTAS_FISCAIS [NF] -- LEFT/RIGHT/FULL/INNER JOIN
ON CLI.CPF = NF.CPF


SELECT DISTINCT
		CLI.CPF [CPF DO CADASTRO] , 
		CLI.NOME
FROM TABELA_DE_CLIENTES [CLI] LEFT JOIN NOTAS_FISCAIS [NF] -- LEFT/RIGHT/FULL/INNER JOIN
ON CLI.CPF = NF.CPF
WHERE NF.CPF IS NULL

--------------------------------------------------------------------------------------

SELECT COUNT(*) FROM TABELA_DE_CLIENTES
-- 16 clientes ---> 7 Clientes estão no mesmo bairro que os vendedores

SELECT COUNT(*) FROM TABELA_DE_VENDEDORES
-- 4 vendedores ---> 3 Vendedores estão no mesmo bairro que os clientes

-- Qual vendedor que não tem cliente no bairro ?

SELECT	TV.NOME AS NOME_VENDEDOR,
		TV.BAIRRO AS BAIRRO_VENDEDOR,
		TC.NOME AS NOME_CLIENTE,
		TC.BAIRRO AS BAIRRO_CLIENTE
FROM TABELA_DE_CLIENTES TC
		/* INNER JOIN */ RIGHT JOIN TABELA_DE_VENDEDORES TV
		ON TC.BAIRRO = TV.BAIRRO
WHERE TC.NOME IS NULL

-- Qual vendedor que não tem cliente no bairro ? R: Roberta Martins em COPACABANA

-- Qual é o Cliente que não tem vendedor no seu bairro ?

SELECT	TV.NOME AS NOME_VENDEDOR,
		TV.BAIRRO AS BAIRRO_VENDEDOR,
		TC.NOME AS NOME_CLIENTE,
		TC.BAIRRO AS BAIRRO_CLIENTE
FROM TABELA_DE_CLIENTES TC
		LEFT JOIN TABELA_DE_VENDEDORES TV
		ON TC.BAIRRO = TV.BAIRRO
WHERE TV.NOME IS NULL

-- Qual é o Cliente que não tem vendedor no seu bairro ? R: 9 clientes

SELECT DISTINCT 
		TV.NOME AS NOME_VENDEDOR,
		TV.BAIRRO AS BAIRRO_VENDEDOR,
		TC.NOME AS NOME_CLIENTE,
		TC.BAIRRO AS BAIRRO_CLIENTE
FROM TABELA_DE_CLIENTES TC
		FULL JOIN TABELA_DE_VENDEDORES TV
		ON TC.BAIRRO = TV.BAIRRO

--------------------------------------------------------------------------------------

SELECT DISTINCT BAIRRO FROM TABELA_DE_CLIENTES
-- 12 bairros

SELECT DISTINCT BAIRRO FROM TABELA_DE_VENDEDORES
-- 4 bairros

SELECT DISTINCT BAIRRO, 'CLIENTE' AS ORIGEM FROM TABELA_DE_CLIENTES
UNION
SELECT DISTINCT BAIRRO, 'VENDEDOR' AS ORIGEM FROM TABELA_DE_VENDEDORES

--------------------------------------------------------------------------------------

SELECT * FROM TABELA_DE_CLIENTES
WHERE BAIRRO IN ( 'copacabana', 
				  'jardins', 
				  'santo amaro', 
				  'tijuca' )


SELECT * FROM TABELA_DE_CLIENTES
WHERE BAIRRO IN (SELECT BAIRRO FROM TABELA_DE_VENDEDORES)

--------------------------------------------------------------------------------------

SELECT	EMBALAGEM,  
		AVG(PRECO_DE_LISTA) AS media
FROM TABELA_DE_PRODUTOS
GROUP BY EMBALAGEM
HAVING AVG(PRECO_DE_LISTA) <= 10


SELECT	media_emb.EMBALAGEM,
		media_emb.MEDIA
FROM  (	SELECT	EMBALAGEM,  AVG(PRECO_DE_LISTA) AS MEDIA
		FROM TABELA_DE_PRODUTOS
		GROUP BY EMBALAGEM ) AS media_emb
WHERE media_emb.MEDIA <= 10 